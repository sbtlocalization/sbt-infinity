// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package parser

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"bytes"
	"io"
)


/**
 * 
 * @see <a href="https://gibberlings3.github.io/iesdp/file_formats/ie_formats/cre_v1.htm
 * ">Source</a>
 */

type Cre_SpellType int
const (
	Cre_SpellType__Priest Cre_SpellType = 0
	Cre_SpellType__Wizard Cre_SpellType = 1
	Cre_SpellType__Innate Cre_SpellType = 2
)
var values_Cre_SpellType = map[Cre_SpellType]struct{}{0: {}, 1: {}, 2: {}}
func (v Cre_SpellType) isDefined() bool {
	_, ok := values_Cre_SpellType[v]
	return ok
}
type Cre struct {
	Magic []byte
	Version string
	LongName uint32
	ShortName uint32
	Body *Cre_BodyV1
	_io *kaitai.Stream
	_root *Cre
	_parent kaitai.Struct
}
func NewCre() *Cre {
	return &Cre{
	}
}

func (this Cre) IO_() *kaitai.Stream {
	return this._io
}

func (this *Cre) Read(io *kaitai.Stream, parent kaitai.Struct, root *Cre) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp1, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp1 = tmp1
	this.Magic = tmp1
	if !(bytes.Equal(this.Magic, []uint8{67, 82, 69, 32})) {
		return kaitai.NewValidationNotEqualError([]uint8{67, 82, 69, 32}, this.Magic, this._io, "/seq/0")
	}
	tmp2, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp2 = tmp2
	this.Version = string(tmp2)
	tmp3, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.LongName = uint32(tmp3)
	tmp4, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.ShortName = uint32(tmp4)
	switch (this.Version) {
	case "V1.0":
		tmp5 := NewCre_BodyV1()
		err = tmp5.Read(this._io, this, this._root)
		if err != nil {
			return err
		}
		this.Body = tmp5
	}
	return err
}
type Cre_BodyV1 struct {
	Header *Cre_BodyV1_Header
	_io *kaitai.Stream
	_root *Cre
	_parent *Cre
	_f_effects bool
	effects []*Eff_BodyV2
	_f_itemSlots bool
	itemSlots *Cre_BodyV1_ItemSlot
	_f_items bool
	items []*Cre_BodyV1_Item
	_f_knownSpells bool
	knownSpells []*Cre_BodyV1_KnownSpell
	_f_memorizedSpells bool
	memorizedSpells []*Cre_BodyV1_MemorizedSpell
	_f_spellMemorizationInfos bool
	spellMemorizationInfos []*Cre_BodyV1_SpellMemorizationInfo
}
func NewCre_BodyV1() *Cre_BodyV1 {
	return &Cre_BodyV1{
	}
}

func (this Cre_BodyV1) IO_() *kaitai.Stream {
	return this._io
}

func (this *Cre_BodyV1) Read(io *kaitai.Stream, parent *Cre, root *Cre) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp6 := NewCre_BodyV1_Header()
	err = tmp6.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Header = tmp6
	return err
}
func (this *Cre_BodyV1) Effects() (v []*Eff_BodyV2, err error) {
	if (this._f_effects) {
		return this.effects, nil
	}
	this._f_effects = true
	_pos, err := this._io.Pos()
	if err != nil {
		return nil, err
	}
	_, err = this._io.Seek(int64(this.Header.OfsEffects), io.SeekStart)
	if err != nil {
		return nil, err
	}
	for i := 0; i < int(this.Header.NumEffects); i++ {
		_ = i
		switch (this.Header.EffVersion) {
		case Cre_BodyV1_Header_EffVersion__Version2:
			tmp7 := NewEff_BodyV2(true)
			err = tmp7.Read(this._io, nil, nil)
			if err != nil {
				return nil, err
			}
			this.effects = append(this.effects, tmp7)
		}
	}
	_, err = this._io.Seek(_pos, io.SeekStart)
	if err != nil {
		return nil, err
	}
	return this.effects, nil
}
func (this *Cre_BodyV1) ItemSlots() (v *Cre_BodyV1_ItemSlot, err error) {
	if (this._f_itemSlots) {
		return this.itemSlots, nil
	}
	this._f_itemSlots = true
	_pos, err := this._io.Pos()
	if err != nil {
		return nil, err
	}
	_, err = this._io.Seek(int64(this.Header.OfsItemSlots), io.SeekStart)
	if err != nil {
		return nil, err
	}
	tmp8 := NewCre_BodyV1_ItemSlot()
	err = tmp8.Read(this._io, this, this._root)
	if err != nil {
		return nil, err
	}
	this.itemSlots = tmp8
	_, err = this._io.Seek(_pos, io.SeekStart)
	if err != nil {
		return nil, err
	}
	return this.itemSlots, nil
}
func (this *Cre_BodyV1) Items() (v []*Cre_BodyV1_Item, err error) {
	if (this._f_items) {
		return this.items, nil
	}
	this._f_items = true
	_pos, err := this._io.Pos()
	if err != nil {
		return nil, err
	}
	_, err = this._io.Seek(int64(this.Header.OfsItems), io.SeekStart)
	if err != nil {
		return nil, err
	}
	for i := 0; i < int(this.Header.NumItems); i++ {
		_ = i
		tmp9 := NewCre_BodyV1_Item()
		err = tmp9.Read(this._io, this, this._root)
		if err != nil {
			return nil, err
		}
		this.items = append(this.items, tmp9)
	}
	_, err = this._io.Seek(_pos, io.SeekStart)
	if err != nil {
		return nil, err
	}
	return this.items, nil
}
func (this *Cre_BodyV1) KnownSpells() (v []*Cre_BodyV1_KnownSpell, err error) {
	if (this._f_knownSpells) {
		return this.knownSpells, nil
	}
	this._f_knownSpells = true
	_pos, err := this._io.Pos()
	if err != nil {
		return nil, err
	}
	_, err = this._io.Seek(int64(this.Header.OfsKnownSpells), io.SeekStart)
	if err != nil {
		return nil, err
	}
	for i := 0; i < int(this.Header.NumKnownSpells); i++ {
		_ = i
		tmp10 := NewCre_BodyV1_KnownSpell()
		err = tmp10.Read(this._io, this, this._root)
		if err != nil {
			return nil, err
		}
		this.knownSpells = append(this.knownSpells, tmp10)
	}
	_, err = this._io.Seek(_pos, io.SeekStart)
	if err != nil {
		return nil, err
	}
	return this.knownSpells, nil
}

/**
 * This section details which spells the character has memorized. It consists of an array of entries formatted as follows.
 */
func (this *Cre_BodyV1) MemorizedSpells() (v []*Cre_BodyV1_MemorizedSpell, err error) {
	if (this._f_memorizedSpells) {
		return this.memorizedSpells, nil
	}
	this._f_memorizedSpells = true
	_pos, err := this._io.Pos()
	if err != nil {
		return nil, err
	}
	_, err = this._io.Seek(int64(this.Header.OfsMemorizedSpells), io.SeekStart)
	if err != nil {
		return nil, err
	}
	for i := 0; i < int(this.Header.NumMemorizedSpells); i++ {
		_ = i
		tmp11 := NewCre_BodyV1_MemorizedSpell()
		err = tmp11.Read(this._io, this, this._root)
		if err != nil {
			return nil, err
		}
		this.memorizedSpells = append(this.memorizedSpells, tmp11)
	}
	_, err = this._io.Seek(_pos, io.SeekStart)
	if err != nil {
		return nil, err
	}
	return this.memorizedSpells, nil
}

/**
 * This section details how many spells the creature can memorize, and how many it has memorized. It consists of an array of entries.
 */
func (this *Cre_BodyV1) SpellMemorizationInfos() (v []*Cre_BodyV1_SpellMemorizationInfo, err error) {
	if (this._f_spellMemorizationInfos) {
		return this.spellMemorizationInfos, nil
	}
	this._f_spellMemorizationInfos = true
	_pos, err := this._io.Pos()
	if err != nil {
		return nil, err
	}
	_, err = this._io.Seek(int64(this.Header.OfsSpellMemorizationInfo), io.SeekStart)
	if err != nil {
		return nil, err
	}
	for i := 0; i < int(this.Header.NumSpellMemorizationInfo); i++ {
		_ = i
		tmp12 := NewCre_BodyV1_SpellMemorizationInfo()
		err = tmp12.Read(this._io, this, this._root)
		if err != nil {
			return nil, err
		}
		this.spellMemorizationInfos = append(this.spellMemorizationInfos, tmp12)
	}
	_, err = this._io.Seek(_pos, io.SeekStart)
	if err != nil {
		return nil, err
	}
	return this.spellMemorizationInfos, nil
}

type Cre_BodyV1_Header_EffVersion int
const (
	Cre_BodyV1_Header_EffVersion__Version1 Cre_BodyV1_Header_EffVersion = 0
	Cre_BodyV1_Header_EffVersion__Version2 Cre_BodyV1_Header_EffVersion = 1
)
var values_Cre_BodyV1_Header_EffVersion = map[Cre_BodyV1_Header_EffVersion]struct{}{0: {}, 1: {}}
func (v Cre_BodyV1_Header_EffVersion) isDefined() bool {
	_, ok := values_Cre_BodyV1_Header_EffVersion[v]
	return ok
}
type Cre_BodyV1_Header struct {
	Flags *Cre_BodyV1_Header_Flags
	XpForKilling uint32
	XpPowerLevel uint32
	GoldCarried uint32
	Status *Cre_BodyV1_Header_StatusFlags
	CurrentHp uint16
	MaximumHp uint16
	AnimationId uint32
	MetalColorIndex uint8
	MinorColorIndex uint8
	MajorColorIndex uint8
	SkinColorIndex uint8
	LeatherColorIndex uint8
	ArmorColorIndex uint8
	HairColorIndex uint8
	EffVersion Cre_BodyV1_Header_EffVersion
	SmallPortrait string
	LargePortrait string
	Reputation int8
	HideInShadows uint8
	NaturalAc int16
	EffectiveAc int16
	CrushingAcModifier int16
	MissileAcModifier int16
	PiercingAcModifier int16
	SlashingAcModifier int16
	Thac0 uint8
	NumAttacks uint8
	SaveVsDeath uint8
	SaveVsWands uint8
	SaveVsPolymorph uint8
	SaveVsBreathAttacks uint8
	SaveVsSpells uint8
	ResistFire uint8
	ResistCold uint8
	ResistElectricity uint8
	ResistAcid uint8
	ResistMagic uint8
	ResistMagicFire uint8
	ResistMagicCold uint8
	ResistSlashing uint8
	ResistCrushing uint8
	ResistPiercing uint8
	ResistMissile uint8
	DetectIllusion uint8
	SetTraps uint8
	Lore uint8
	Lockpicking uint8
	MoveSilently uint8
	FindDisarmTraps uint8
	PickPockets uint8
	Fatigue uint8
	Intoxication uint8
	Luck uint8
	LargeSwordsProficiency uint8
	SmallSwordsProficiency uint8
	BowsProficiency uint8
	SpearsProficiency uint8
	BluntProficiency uint8
	SpikedProficiency uint8
	AxeProficiency uint8
	MissileProficiency uint8
	ReservedProficiency1 uint8
	ReservedProficiency2 uint8
	ReservedProficiency3 uint8
	ReservedProficiency4 uint8
	ReservedProficiency5 uint8
	UnspentProficiencies uint8
	NumAvailableInventorySlots uint8
	NightmareModeModifiers uint8
	Translucency uint8
	ReputationGainLossWhenKilledOrMurderVariableIncrement uint8
	ReputationGainLossWhenJoiningParty uint8
	ReputationGainLossWhenLeavingParty uint8
	TurnUndeadLevel uint8
	TrackingSkill uint8
	TrackingTargetOrPsteeFlags []byte
	StrRefs []uint32
	LevelFirstClass uint8
	LevelSecondClass uint8
	LevelThirdClass uint8
	Sex uint8
	Strength uint8
	StrengthBonus uint8
	Intelligence uint8
	Wisdom uint8
	Dexterity uint8
	Constitution uint8
	Charisma uint8
	Morale uint8
	MoraleBreak uint8
	RacialEnemy uint8
	MoraleRecoveryTime uint16
	_unnamed93 uint32
	OverrideScript string
	ClassScript string
	RaceScript string
	GeneralScript string
	DefaultScript string
	EnemyAlly uint8
	General uint8
	Race uint8
	Class uint8
	Specific uint8
	Gender uint8
	ObjectIdsRefs []uint8
	Alignment uint8
	GlobalActorEnumValue uint16
	LocalActorEnumValue uint16
	DeathVariable string
	OfsKnownSpells uint32
	NumKnownSpells uint32
	OfsSpellMemorizationInfo uint32
	NumSpellMemorizationInfo uint32
	OfsMemorizedSpells uint32
	NumMemorizedSpells uint32
	OfsItemSlots uint32
	OfsItems uint32
	NumItems uint32
	OfsEffects uint32
	NumEffects uint32
	Dialog string
	_io *kaitai.Stream
	_root *Cre
	_parent *Cre_BodyV1
}
func NewCre_BodyV1_Header() *Cre_BodyV1_Header {
	return &Cre_BodyV1_Header{
	}
}

func (this Cre_BodyV1_Header) IO_() *kaitai.Stream {
	return this._io
}

func (this *Cre_BodyV1_Header) Read(io *kaitai.Stream, parent *Cre_BodyV1, root *Cre) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp13 := NewCre_BodyV1_Header_Flags()
	err = tmp13.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Flags = tmp13
	tmp14, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.XpForKilling = uint32(tmp14)
	tmp15, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.XpPowerLevel = uint32(tmp15)
	tmp16, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.GoldCarried = uint32(tmp16)
	tmp17 := NewCre_BodyV1_Header_StatusFlags()
	err = tmp17.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Status = tmp17
	tmp18, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.CurrentHp = uint16(tmp18)
	tmp19, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.MaximumHp = uint16(tmp19)
	tmp20, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.AnimationId = uint32(tmp20)
	tmp21, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.MetalColorIndex = tmp21
	tmp22, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.MinorColorIndex = tmp22
	tmp23, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.MajorColorIndex = tmp23
	tmp24, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.SkinColorIndex = tmp24
	tmp25, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.LeatherColorIndex = tmp25
	tmp26, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ArmorColorIndex = tmp26
	tmp27, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.HairColorIndex = tmp27
	tmp28, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.EffVersion = Cre_BodyV1_Header_EffVersion(tmp28)
	tmp29, err := this._io.ReadBytes(int(8))
	if err != nil {
		return err
	}
	tmp29 = kaitai.BytesTerminate(tmp29, 0, false)
	this.SmallPortrait = string(tmp29)
	tmp30, err := this._io.ReadBytes(int(8))
	if err != nil {
		return err
	}
	tmp30 = kaitai.BytesTerminate(tmp30, 0, false)
	this.LargePortrait = string(tmp30)
	tmp31, err := this._io.ReadS1()
	if err != nil {
		return err
	}
	this.Reputation = tmp31
	tmp32, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.HideInShadows = tmp32
	tmp33, err := this._io.ReadS2le()
	if err != nil {
		return err
	}
	this.NaturalAc = int16(tmp33)
	tmp34, err := this._io.ReadS2le()
	if err != nil {
		return err
	}
	this.EffectiveAc = int16(tmp34)
	tmp35, err := this._io.ReadS2le()
	if err != nil {
		return err
	}
	this.CrushingAcModifier = int16(tmp35)
	tmp36, err := this._io.ReadS2le()
	if err != nil {
		return err
	}
	this.MissileAcModifier = int16(tmp36)
	tmp37, err := this._io.ReadS2le()
	if err != nil {
		return err
	}
	this.PiercingAcModifier = int16(tmp37)
	tmp38, err := this._io.ReadS2le()
	if err != nil {
		return err
	}
	this.SlashingAcModifier = int16(tmp38)
	tmp39, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Thac0 = tmp39
	tmp40, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.NumAttacks = tmp40
	tmp41, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.SaveVsDeath = tmp41
	tmp42, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.SaveVsWands = tmp42
	tmp43, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.SaveVsPolymorph = tmp43
	tmp44, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.SaveVsBreathAttacks = tmp44
	tmp45, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.SaveVsSpells = tmp45
	tmp46, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ResistFire = tmp46
	tmp47, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ResistCold = tmp47
	tmp48, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ResistElectricity = tmp48
	tmp49, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ResistAcid = tmp49
	tmp50, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ResistMagic = tmp50
	tmp51, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ResistMagicFire = tmp51
	tmp52, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ResistMagicCold = tmp52
	tmp53, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ResistSlashing = tmp53
	tmp54, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ResistCrushing = tmp54
	tmp55, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ResistPiercing = tmp55
	tmp56, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ResistMissile = tmp56
	tmp57, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.DetectIllusion = tmp57
	tmp58, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.SetTraps = tmp58
	tmp59, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Lore = tmp59
	tmp60, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Lockpicking = tmp60
	tmp61, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.MoveSilently = tmp61
	tmp62, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.FindDisarmTraps = tmp62
	tmp63, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.PickPockets = tmp63
	tmp64, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Fatigue = tmp64
	tmp65, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Intoxication = tmp65
	tmp66, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Luck = tmp66
	tmp67, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.LargeSwordsProficiency = tmp67
	tmp68, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.SmallSwordsProficiency = tmp68
	tmp69, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.BowsProficiency = tmp69
	tmp70, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.SpearsProficiency = tmp70
	tmp71, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.BluntProficiency = tmp71
	tmp72, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.SpikedProficiency = tmp72
	tmp73, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.AxeProficiency = tmp73
	tmp74, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.MissileProficiency = tmp74
	tmp75, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ReservedProficiency1 = tmp75
	tmp76, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ReservedProficiency2 = tmp76
	tmp77, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ReservedProficiency3 = tmp77
	tmp78, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ReservedProficiency4 = tmp78
	tmp79, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ReservedProficiency5 = tmp79
	tmp80, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.UnspentProficiencies = tmp80
	tmp81, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.NumAvailableInventorySlots = tmp81
	tmp82, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.NightmareModeModifiers = tmp82
	tmp83, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Translucency = tmp83
	tmp84, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ReputationGainLossWhenKilledOrMurderVariableIncrement = tmp84
	tmp85, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ReputationGainLossWhenJoiningParty = tmp85
	tmp86, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.ReputationGainLossWhenLeavingParty = tmp86
	tmp87, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.TurnUndeadLevel = tmp87
	tmp88, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.TrackingSkill = tmp88
	tmp89, err := this._io.ReadBytes(int(32))
	if err != nil {
		return err
	}
	tmp89 = tmp89
	this.TrackingTargetOrPsteeFlags = tmp89
	for i := 0; i < int(100); i++ {
		_ = i
		tmp90, err := this._io.ReadU4le()
		if err != nil {
			return err
		}
		this.StrRefs = append(this.StrRefs, tmp90)
	}
	tmp91, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.LevelFirstClass = tmp91
	tmp92, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.LevelSecondClass = tmp92
	tmp93, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.LevelThirdClass = tmp93
	tmp94, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Sex = tmp94
	tmp95, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Strength = tmp95
	tmp96, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.StrengthBonus = tmp96
	tmp97, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Intelligence = tmp97
	tmp98, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Wisdom = tmp98
	tmp99, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Dexterity = tmp99
	tmp100, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Constitution = tmp100
	tmp101, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Charisma = tmp101
	tmp102, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Morale = tmp102
	tmp103, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.MoraleBreak = tmp103
	tmp104, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.RacialEnemy = tmp104
	tmp105, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.MoraleRecoveryTime = uint16(tmp105)
	tmp106, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this._unnamed93 = tmp106
	tmp107, err := this._io.ReadBytes(int(8))
	if err != nil {
		return err
	}
	tmp107 = kaitai.BytesTerminate(tmp107, 0, false)
	this.OverrideScript = string(tmp107)
	tmp108, err := this._io.ReadBytes(int(8))
	if err != nil {
		return err
	}
	tmp108 = kaitai.BytesTerminate(tmp108, 0, false)
	this.ClassScript = string(tmp108)
	tmp109, err := this._io.ReadBytes(int(8))
	if err != nil {
		return err
	}
	tmp109 = kaitai.BytesTerminate(tmp109, 0, false)
	this.RaceScript = string(tmp109)
	tmp110, err := this._io.ReadBytes(int(8))
	if err != nil {
		return err
	}
	tmp110 = kaitai.BytesTerminate(tmp110, 0, false)
	this.GeneralScript = string(tmp110)
	tmp111, err := this._io.ReadBytes(int(8))
	if err != nil {
		return err
	}
	tmp111 = kaitai.BytesTerminate(tmp111, 0, false)
	this.DefaultScript = string(tmp111)
	tmp112, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.EnemyAlly = tmp112
	tmp113, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.General = tmp113
	tmp114, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Race = tmp114
	tmp115, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Class = tmp115
	tmp116, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Specific = tmp116
	tmp117, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Gender = tmp117
	for i := 0; i < int(5); i++ {
		_ = i
		tmp118, err := this._io.ReadU1()
		if err != nil {
			return err
		}
		this.ObjectIdsRefs = append(this.ObjectIdsRefs, tmp118)
	}
	tmp119, err := this._io.ReadU1()
	if err != nil {
		return err
	}
	this.Alignment = tmp119
	tmp120, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.GlobalActorEnumValue = uint16(tmp120)
	tmp121, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.LocalActorEnumValue = uint16(tmp121)
	tmp122, err := this._io.ReadBytes(int(32))
	if err != nil {
		return err
	}
	tmp122 = kaitai.BytesTerminate(tmp122, 0, false)
	this.DeathVariable = string(tmp122)
	tmp123, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.OfsKnownSpells = uint32(tmp123)
	tmp124, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.NumKnownSpells = uint32(tmp124)
	tmp125, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.OfsSpellMemorizationInfo = uint32(tmp125)
	tmp126, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.NumSpellMemorizationInfo = uint32(tmp126)
	tmp127, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.OfsMemorizedSpells = uint32(tmp127)
	tmp128, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.NumMemorizedSpells = uint32(tmp128)
	tmp129, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.OfsItemSlots = uint32(tmp129)
	tmp130, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.OfsItems = uint32(tmp130)
	tmp131, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.NumItems = uint32(tmp131)
	tmp132, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.OfsEffects = uint32(tmp132)
	tmp133, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.NumEffects = uint32(tmp133)
	tmp134, err := this._io.ReadBytes(int(8))
	if err != nil {
		return err
	}
	tmp134 = kaitai.BytesTerminate(tmp134, 0, false)
	this.Dialog = string(tmp134)
	return err
}

/**
 * PSTEE: BAM
 * Other games: BMP
 */

/**
 * Number of attacks per round
 */

/**
 * Minimum value – 0
 */

/**
 * Lore is calculated as ((level * rate) + int_bonus + wis_bonus). Intelligence and wisdom
 * bonuses are from LOREBON.2DA and the rate is the lookup value in LORE.2DA, based on class.
 * For multiclass characters, (level * rate) is calculated for both classes separately and
 * the higher of the two values is used - they are not cumulative.
 */

/**
 * Minimum value – 0
 */

/**
 * Minimum value – 0
 */

/**
 * Minimum value – 0
 */

/**
 * Minimum value – 0
 */

/**
 * Sex (`GENDER.IDS`) - checkable via the SEX stat.
 * 
 * EE only: determines casting sound prefix.
 * Known values include:
 * - 1 (Male), default – `CHA_M*.WAV`
 * - 2 (Female) – `CHA_F*.WAV`
 * - 3 (Other), 4 (Niether) – `CHA_S*.WAV`
 */

/**
 * 0..100%
 */

/**
 * default – 10
 */

/**
 * See `RACE.IDS`
 */

/**
 * See `EA.IDS`
 */

/**
 * See `GENERAL.IDS`
 */

/**
 * See `RACE.IDS`
 */

/**
 * See `CLASS.IDS`
 */

/**
 * See `SPECIFIC.IDS`
 */

/**
 * See `GENDER.IDS`
 */

/**
 * See `OBJECT.IDS`
 */

/**
 * See `ALIGNMEN.IDS`
 */
type Cre_BodyV1_Header_Flags struct {
	ShowLongnameInTooltip bool
	NoCorpse bool
	KeepCorpse bool
	OriginalClassFighter bool
	OriginalClassMage bool
	OriginalClassCleric bool
	OriginalClassThief bool
	OriginalClassDruid bool
	OriginalClassRanger bool
	FallenPaladin bool
	FallenRanger bool
	Exportable bool
	HideInjuryStatus bool
	AffectedByAlternativeDamage bool
	MovingBetweenAreas bool
	BeenInParty bool
	RestoreItemInHand bool
	ResetRestoringItemInHand bool
	Reserved1 bool
	Reserved2 bool
	PreventExplodingDeath bool
	Reserved3 bool
	IgnoreNightmareModifiers bool
	NoTooltip bool
	AllegianceTracking bool
	GeneralTracking bool
	RaceTracking bool
	ClassTracking bool
	SpecificTracking bool
	GenderTracking bool
	AlignmentTracking bool
	Uninterruptable bool
	_io *kaitai.Stream
	_root *Cre
	_parent *Cre_BodyV1_Header
}
func NewCre_BodyV1_Header_Flags() *Cre_BodyV1_Header_Flags {
	return &Cre_BodyV1_Header_Flags{
	}
}

func (this Cre_BodyV1_Header_Flags) IO_() *kaitai.Stream {
	return this._io
}

func (this *Cre_BodyV1_Header_Flags) Read(io *kaitai.Stream, parent *Cre_BodyV1_Header, root *Cre) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp135, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.ShowLongnameInTooltip = tmp135 != 0
	tmp136, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.NoCorpse = tmp136 != 0
	tmp137, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.KeepCorpse = tmp137 != 0
	tmp138, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.OriginalClassFighter = tmp138 != 0
	tmp139, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.OriginalClassMage = tmp139 != 0
	tmp140, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.OriginalClassCleric = tmp140 != 0
	tmp141, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.OriginalClassThief = tmp141 != 0
	tmp142, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.OriginalClassDruid = tmp142 != 0
	tmp143, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.OriginalClassRanger = tmp143 != 0
	tmp144, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.FallenPaladin = tmp144 != 0
	tmp145, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.FallenRanger = tmp145 != 0
	tmp146, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Exportable = tmp146 != 0
	tmp147, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.HideInjuryStatus = tmp147 != 0
	tmp148, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.AffectedByAlternativeDamage = tmp148 != 0
	tmp149, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.MovingBetweenAreas = tmp149 != 0
	tmp150, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.BeenInParty = tmp150 != 0
	tmp151, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.RestoreItemInHand = tmp151 != 0
	tmp152, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.ResetRestoringItemInHand = tmp152 != 0
	tmp153, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Reserved1 = tmp153 != 0
	tmp154, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Reserved2 = tmp154 != 0
	tmp155, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.PreventExplodingDeath = tmp155 != 0
	tmp156, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Reserved3 = tmp156 != 0
	tmp157, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.IgnoreNightmareModifiers = tmp157 != 0
	tmp158, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.NoTooltip = tmp158 != 0
	tmp159, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.AllegianceTracking = tmp159 != 0
	tmp160, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.GeneralTracking = tmp160 != 0
	tmp161, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.RaceTracking = tmp161 != 0
	tmp162, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.ClassTracking = tmp162 != 0
	tmp163, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.SpecificTracking = tmp163 != 0
	tmp164, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.GenderTracking = tmp164 != 0
	tmp165, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.AlignmentTracking = tmp165 != 0
	tmp166, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Uninterruptable = tmp166 != 0
	return err
}
type Cre_BodyV1_Header_StatusFlags struct {
	Sleeping bool
	Berserk bool
	Panic bool
	Stunned bool
	Invisible bool
	Helpless bool
	FrozenDeath bool
	StoneDeath bool
	ExplodingDeath bool
	FlameDeath bool
	AcidDeath bool
	Dead bool
	Silenced bool
	Charmed bool
	Poisoned bool
	Hasted bool
	Slowed bool
	Infravision bool
	Blind bool
	DiseasedOrDeactivated bool
	FeebleMinded bool
	NonDetection bool
	ImprovedVisibility bool
	Bless bool
	Chant bool
	DrawUponHolyMight bool
	Luck bool
	Aid bool
	Chantbad bool
	Blur bool
	MirrorImage bool
	Confused bool
	_io *kaitai.Stream
	_root *Cre
	_parent *Cre_BodyV1_Header
}
func NewCre_BodyV1_Header_StatusFlags() *Cre_BodyV1_Header_StatusFlags {
	return &Cre_BodyV1_Header_StatusFlags{
	}
}

func (this Cre_BodyV1_Header_StatusFlags) IO_() *kaitai.Stream {
	return this._io
}

func (this *Cre_BodyV1_Header_StatusFlags) Read(io *kaitai.Stream, parent *Cre_BodyV1_Header, root *Cre) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp167, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Sleeping = tmp167 != 0
	tmp168, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Berserk = tmp168 != 0
	tmp169, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Panic = tmp169 != 0
	tmp170, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Stunned = tmp170 != 0
	tmp171, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Invisible = tmp171 != 0
	tmp172, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Helpless = tmp172 != 0
	tmp173, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.FrozenDeath = tmp173 != 0
	tmp174, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.StoneDeath = tmp174 != 0
	tmp175, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.ExplodingDeath = tmp175 != 0
	tmp176, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.FlameDeath = tmp176 != 0
	tmp177, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.AcidDeath = tmp177 != 0
	tmp178, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Dead = tmp178 != 0
	tmp179, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Silenced = tmp179 != 0
	tmp180, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Charmed = tmp180 != 0
	tmp181, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Poisoned = tmp181 != 0
	tmp182, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Hasted = tmp182 != 0
	tmp183, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Slowed = tmp183 != 0
	tmp184, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Infravision = tmp184 != 0
	tmp185, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Blind = tmp185 != 0
	tmp186, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.DiseasedOrDeactivated = tmp186 != 0
	tmp187, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.FeebleMinded = tmp187 != 0
	tmp188, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.NonDetection = tmp188 != 0
	tmp189, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.ImprovedVisibility = tmp189 != 0
	tmp190, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Bless = tmp190 != 0
	tmp191, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Chant = tmp191 != 0
	tmp192, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.DrawUponHolyMight = tmp192 != 0
	tmp193, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Luck = tmp193 != 0
	tmp194, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Aid = tmp194 != 0
	tmp195, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Chantbad = tmp195 != 0
	tmp196, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Blur = tmp196 != 0
	tmp197, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.MirrorImage = tmp197 != 0
	tmp198, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Confused = tmp198 != 0
	return err
}
type Cre_BodyV1_Item struct {
	ResName string
	Duration uint16
	QuantityCharges1 uint16
	QuantityCharges2 uint16
	QuantityCharges3 uint16
	Flags *Cre_BodyV1_Item_ItemFlags
	_io *kaitai.Stream
	_root *Cre
	_parent *Cre_BodyV1
	_raw_Flags []byte
}
func NewCre_BodyV1_Item() *Cre_BodyV1_Item {
	return &Cre_BodyV1_Item{
	}
}

func (this Cre_BodyV1_Item) IO_() *kaitai.Stream {
	return this._io
}

func (this *Cre_BodyV1_Item) Read(io *kaitai.Stream, parent *Cre_BodyV1, root *Cre) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp199, err := this._io.ReadBytes(int(8))
	if err != nil {
		return err
	}
	tmp199 = kaitai.BytesTerminate(tmp199, 0, false)
	this.ResName = string(tmp199)
	tmp200, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.Duration = uint16(tmp200)
	tmp201, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.QuantityCharges1 = uint16(tmp201)
	tmp202, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.QuantityCharges2 = uint16(tmp202)
	tmp203, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.QuantityCharges3 = uint16(tmp203)
	tmp204, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp204 = tmp204
	this._raw_Flags = tmp204
	_io__raw_Flags := kaitai.NewStream(bytes.NewReader(this._raw_Flags))
	tmp205 := NewCre_BodyV1_Item_ItemFlags()
	err = tmp205.Read(_io__raw_Flags, this, this._root)
	if err != nil {
		return err
	}
	this.Flags = tmp205
	return err
}

/**
 * Resource name of the ITM file.
 */
type Cre_BodyV1_Item_ItemFlags struct {
	Identified bool
	Unstealable bool
	Stolen bool
	Undroppable bool
	_io *kaitai.Stream
	_root *Cre
	_parent *Cre_BodyV1_Item
}
func NewCre_BodyV1_Item_ItemFlags() *Cre_BodyV1_Item_ItemFlags {
	return &Cre_BodyV1_Item_ItemFlags{
	}
}

func (this Cre_BodyV1_Item_ItemFlags) IO_() *kaitai.Stream {
	return this._io
}

func (this *Cre_BodyV1_Item_ItemFlags) Read(io *kaitai.Stream, parent *Cre_BodyV1_Item, root *Cre) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp206, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Identified = tmp206 != 0
	tmp207, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Unstealable = tmp207 != 0
	tmp208, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Stolen = tmp208 != 0
	tmp209, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Undroppable = tmp209 != 0
	return err
}
type Cre_BodyV1_ItemSlot struct {
	_io *kaitai.Stream
	_root *Cre
	_parent *Cre_BodyV1
}
func NewCre_BodyV1_ItemSlot() *Cre_BodyV1_ItemSlot {
	return &Cre_BodyV1_ItemSlot{
	}
}

func (this Cre_BodyV1_ItemSlot) IO_() *kaitai.Stream {
	return this._io
}

func (this *Cre_BodyV1_ItemSlot) Read(io *kaitai.Stream, parent *Cre_BodyV1, root *Cre) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	return err
}
type Cre_BodyV1_KnownSpell struct {
	ResName string
	SpellLevel uint16
	SpellType Cre_SpellType
	_io *kaitai.Stream
	_root *Cre
	_parent *Cre_BodyV1
}
func NewCre_BodyV1_KnownSpell() *Cre_BodyV1_KnownSpell {
	return &Cre_BodyV1_KnownSpell{
	}
}

func (this Cre_BodyV1_KnownSpell) IO_() *kaitai.Stream {
	return this._io
}

func (this *Cre_BodyV1_KnownSpell) Read(io *kaitai.Stream, parent *Cre_BodyV1, root *Cre) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp210, err := this._io.ReadBytes(int(8))
	if err != nil {
		return err
	}
	tmp210 = kaitai.BytesTerminate(tmp210, 0, false)
	this.ResName = string(tmp210)
	tmp211, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.SpellLevel = uint16(tmp211)
	tmp212, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.SpellType = Cre_SpellType(tmp212)
	return err
}

/**
 * Resource name of the SPL file
 */

/**
 * Spell level minus 1
 */
type Cre_BodyV1_MemorizedSpell struct {
	ResName string
	Flags *Cre_BodyV1_MemorizedSpell_MemorizationFlags
	_io *kaitai.Stream
	_root *Cre
	_parent *Cre_BodyV1
	_raw_Flags []byte
}
func NewCre_BodyV1_MemorizedSpell() *Cre_BodyV1_MemorizedSpell {
	return &Cre_BodyV1_MemorizedSpell{
	}
}

func (this Cre_BodyV1_MemorizedSpell) IO_() *kaitai.Stream {
	return this._io
}

func (this *Cre_BodyV1_MemorizedSpell) Read(io *kaitai.Stream, parent *Cre_BodyV1, root *Cre) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp213, err := this._io.ReadBytes(int(8))
	if err != nil {
		return err
	}
	tmp213 = kaitai.BytesTerminate(tmp213, 0, false)
	this.ResName = string(tmp213)
	tmp214, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp214 = tmp214
	this._raw_Flags = tmp214
	_io__raw_Flags := kaitai.NewStream(bytes.NewReader(this._raw_Flags))
	tmp215 := NewCre_BodyV1_MemorizedSpell_MemorizationFlags()
	err = tmp215.Read(_io__raw_Flags, this, this._root)
	if err != nil {
		return err
	}
	this.Flags = tmp215
	return err
}

/**
 * Resource name of the SPL file.
 */
type Cre_BodyV1_MemorizedSpell_MemorizationFlags struct {
	Memorized bool
	Disabled bool
	_io *kaitai.Stream
	_root *Cre
	_parent *Cre_BodyV1_MemorizedSpell
}
func NewCre_BodyV1_MemorizedSpell_MemorizationFlags() *Cre_BodyV1_MemorizedSpell_MemorizationFlags {
	return &Cre_BodyV1_MemorizedSpell_MemorizationFlags{
	}
}

func (this Cre_BodyV1_MemorizedSpell_MemorizationFlags) IO_() *kaitai.Stream {
	return this._io
}

func (this *Cre_BodyV1_MemorizedSpell_MemorizationFlags) Read(io *kaitai.Stream, parent *Cre_BodyV1_MemorizedSpell, root *Cre) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp216, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Memorized = tmp216 != 0
	tmp217, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.Disabled = tmp217 != 0
	return err
}
type Cre_BodyV1_SpellMemorizationInfo struct {
	SpellLevel uint16
	NumMemorizableSpells uint16
	NumMemorizableSpellsAfterEffects uint16
	SpellType Cre_SpellType
	FirstMemorizedSpell uint32
	NumMemorizedSpell uint32
	_io *kaitai.Stream
	_root *Cre
	_parent *Cre_BodyV1
}
func NewCre_BodyV1_SpellMemorizationInfo() *Cre_BodyV1_SpellMemorizationInfo {
	return &Cre_BodyV1_SpellMemorizationInfo{
	}
}

func (this Cre_BodyV1_SpellMemorizationInfo) IO_() *kaitai.Stream {
	return this._io
}

func (this *Cre_BodyV1_SpellMemorizationInfo) Read(io *kaitai.Stream, parent *Cre_BodyV1, root *Cre) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp218, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.SpellLevel = uint16(tmp218)
	tmp219, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.NumMemorizableSpells = uint16(tmp219)
	tmp220, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.NumMemorizableSpellsAfterEffects = uint16(tmp220)
	tmp221, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.SpellType = Cre_SpellType(tmp221)
	tmp222, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.FirstMemorizedSpell = uint32(tmp222)
	tmp223, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.NumMemorizedSpell = uint32(tmp223)
	return err
}
type Cre_SpellV22 struct {
	SpellIndex uint32
	AmountMemorized uint32
	AmountRemaining uint32
	_unnamed3 uint32
	_io *kaitai.Stream
	_root *Cre
	_parent kaitai.Struct
}
func NewCre_SpellV22() *Cre_SpellV22 {
	return &Cre_SpellV22{
	}
}

func (this Cre_SpellV22) IO_() *kaitai.Stream {
	return this._io
}

func (this *Cre_SpellV22) Read(io *kaitai.Stream, parent kaitai.Struct, root *Cre) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp224, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.SpellIndex = uint32(tmp224)
	tmp225, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.AmountMemorized = uint32(tmp225)
	tmp226, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.AmountRemaining = uint32(tmp226)
	tmp227, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this._unnamed3 = tmp227
	return err
}

/**
 * Index into the relevant 2da file: listspll, listdomm, listinnt, listshap, listsong.
 */
